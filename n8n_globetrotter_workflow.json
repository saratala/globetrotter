{
  "name": "globetrotter",
  "nodes": [
    {
      "parameters": {
        "path": "travel2",
        "method": "GET",
        "responseMode": "onReceived"
      },
      "id": "1",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [300, 300]
    },
    {
      "parameters": {
        "functionCode": "const query = $json.query || $parameter.query || ''\nif (!query) {\n  return [{ error: 'No query provided.' }];\n}\n// Here you could add logic to call an external AI API, or mock a response\n// For demo, return a fake travel recommendation\nreturn [{\n  answer: `For your query: '${query}', we recommend visiting Kyoto, Japan in spring!`,\n  details: {\n    city: 'Kyoto',\n    country: 'Japan',\n    bestSeason: 'Spring',\n    highlights: ['Cherry Blossoms', 'Temples', 'Cuisine']\n  }\n}];"
      },
      "id": "2",
      "name": "Process Query",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [600, 300]
    },
    {
      "parameters": {
        "responseData": "={{ $json }}",
        "responseCode": 200
      },
      "id": "3",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://test.api.amadeus.com/v1/security/oauth2/token",
        "jsonParameters": false,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            { "name": "grant_type", "value": "client_credentials" },
            { "name": "client_id", "value": "={{$env[\"AMADEUS_CLIENT_ID\"]}}" },
            { "name": "client_secret", "value": "={{$env[\"AMADEUS_CLIENT_SECRET\"]}}" }
          ]
        }
      },
      "id": "5",
      "name": "Amadeus Auth",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [600, 700]
    },
    {
      "parameters": {
        "functionCode": "// Log the Amadeus Auth response for debugging\nconsole.log('Amadeus Auth Response:', $json);\n\n// Check if we have an access_token\nif (!$json.access_token) {\n  return {\n    error: true,\n    message: 'Failed to get access token from Amadeus',\n    response: $json\n  };\n}\n\n// Return the token for use in subsequent nodes\nreturn $json;"
      },
      "id": "7",
      "name": "Process Auth Response",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [750, 700]
    },
    {
      "parameters": {
        "requestMethod": "GET",
        "url": "https://test.api.amadeus.com/v2/shopping/flight-offers",
        "jsonParameters": true,
        "options": {
          "query": [
            { "name": "originLocationCode", "value": "={{$json[\"origin\"] || 'BOS'}}" },
            { "name": "destinationLocationCode", "value": "={{$json[\"destination\"] || 'JFK'}}" },
            { "name": "departureDate", "value": "={{$json[\"departureDate\"] || '2025-06-10'}}" },
            { "name": "adults", "value": "={{$json[\"adults\"] || '1'}}" },
            { "name": "max", "value": "10" },
            { "name": "currencyCode", "value": "USD" }
          ],
          "headers": [
            { "name": "Authorization", "value": "==\"Bearer \"+$node[\"Process Auth Response\"].json[\"access_token\"]" },
            { "name": "Accept", "value": "application/json" }
          ]
        }
      },
      "id": "6",
      "name": "Amadeus Flight Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [900, 700]
    },
    {
      "parameters": {
        "functionCode": "// Log the Flight Search response for debugging\nconsole.log('Amadeus Flight Search Response:', $json);\n\n// Check if we have errors\nif ($json.errors) {\n  return {\n    error: true,\n    message: 'Error in flight search',\n    details: $json.errors\n  };\n}\n\n// Return the flight data or error response\nreturn $json;"
      },
      "id": "8",
      "name": "Process Flight Response",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1050, 700]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Process Query",
            "type": "main",
            "index": 0
          },
          {
            "node": "Amadeus Auth",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Query": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Amadeus Auth": {
      "main": [
        [
          {
            "node": "Process Auth Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Auth Response": {
      "main": [
        [
          {
            "node": "Amadeus Flight Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Amadeus Flight Search": {
      "main": [
        [
          {
            "node": "Process Flight Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Flight Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
